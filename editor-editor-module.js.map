{"version":3,"sources":["./src/app/editor/core/provider/dynamic-create-comp-init.service.ts","./src/app/editor/core/comps-libs/comps-libs.module.ts","./src/app/editor/core/comps-libs/basic/basic/basic.component.ts","./src/app/editor/core/comps-libs/basic/basic/basic.component.html","./src/app/editor/core/comps-libs/comps/elements/element.component.ts","./src/app/editor/core/comps-libs/comps/elements/element.component.html","./src/app/editor/core/provider/uniqueid-state.service.ts","./src/app/editor/editor.module.ts","./src/app/editor/directives/content-ref-host.directive.ts","./src/app/editor/core/comps-libs/basic/basic-style/basic-style.component.ts","./src/app/editor/core/comps-libs/basic/basic-style/basic-style.component.html","./src/app/editor/components/json-schema/json-schema.component.ts","./src/app/editor/components/json-schema/json-schema.component.html","./src/app/editor/providers/json-schema.service.ts","./src/app/editor/core/editor-core.module.ts","./src/app/editor/components/node-signal/node-signal.component.ts","./src/app/editor/components/node-signal/node-signal.component.html","./src/app/editor/components/editor-content/editor-content.component.ts","./src/app/editor/components/editor-content/editor-content.component.html","./src/app/editor/core/comps-libs/no-match/no-match.component.ts","./src/app/editor/core/comps-libs/no-match/no-match.component.html","./src/app/editor/core/comps-libs/comps/line/line.component.ts","./src/app/editor/core/comps-libs/comps/line/line.component.html","./src/app/editor/core/provider/dynamic-create-comp.service.ts"],"names":[],"mappings":"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","file":"editor-editor-module.js","sourcesContent":["import { Injectable, Component } from '@angular/core';\r\nimport * as _ from 'loadsh';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicCreateCompInitService {\r\n    constructor() {\r\n\r\n    }\r\n    COMP_MODE_DATA_JSON = {\r\n      \"uniqueId\":0,\r\n      \"linkElementConfigId\":null,\r\n      \"linkConfigId\":0,\r\n      \"elementId\":0,\r\n      \"positionTop\":0,\r\n      \"positionLeft\":0,\r\n      \"expression\":\"5\",\r\n      \"nodeDTOs\":[\r\n        {\r\n          \"uniqueId\": 0,\r\n          \"nodeId\": null,\r\n          \"linkElementConfigId\": null,\r\n          \"nodeDirection\": \"right\",\r\n          \"nodeType\": \"custom\",\r\n          \"nodeIndex\": 1,\r\n          \"nodeTag\": null,\r\n          \"expression\": null,\r\n          \"segmentDTOs\": []\r\n        },\r\n        {\r\n          \"uniqueId\": 0,\r\n          \"nodeId\": null,\r\n          \"linkElementConfigId\": null,\r\n          \"nodeDirection\": \"left\",\r\n          \"nodeType\": \"custom\",\r\n          \"nodeIndex\": 1,\r\n          \"nodeTag\": null,\r\n          \"expression\": null,\r\n          \"segmentDTOs\": []\r\n        },\r\n      ]\r\n    }\r\n\r\n    initDataObject(type:string) {\r\n      let compJsonSchame = {\r\n        node: this.COMP_MODE_DATA_JSON\r\n      }\r\n      // 深度\r\n      return _.cloneDeep(compJsonSchame[type]);\r\n    }\r\n\r\n    \r\n}","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NoMatchComponent } from './no-match/no-match.component';\r\nimport { ElementComponent } from './comps/elements/element.component';\r\nimport { BasicComponent } from './basic/basic/basic.component';\r\nimport { LineComponent } from './comps/line/line.component';\r\n\r\nconst nodeComps = [\r\n  ElementComponent,\r\n  NoMatchComponent,\r\n  BasicComponent,\r\n  LineComponent,\r\n]\r\n@NgModule({\r\n  declarations: [\r\n    [...nodeComps]\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  entryComponents:[\r\n    [...nodeComps]\r\n  ],\r\n  exports:[\r\n    [...nodeComps]\r\n  ],\r\n  schemas:[\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class CompsLibsModule { }\r\n","import { EventEmitter, AfterContentChecked } from '@angular/core';\r\nimport { AfterContentInit } from '@angular/core';\r\nimport { Component, Input, OnInit, Output } from '@angular/core';\r\nimport * as _ from 'loadsh';\r\n@Component({\r\n  selector: 'app-basic',\r\n  templateUrl: './basic.component.html',\r\n  styleUrls: ['./basic.component.scss']\r\n})\r\nexport class BasicComponent implements OnInit, AfterContentInit, AfterContentChecked {\r\n  isActiveBool:boolean = false;\r\n  @Input() compJsonSchame: any;\r\n  @Output() onChildComponentChange  = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n\r\n  }\r\n  \r\n  ngAfterContentChecked() {\r\n    if(this.compJsonSchame) {\r\n      this.getNodesPostion(this.compJsonSchame['nodeDTOs']);\r\n    }\r\n   \r\n  }\r\n\r\n  getCompActiveState() {\r\n    if( this.compJsonSchame) {\r\n      this.isActiveBool = this.compJsonSchame.active\r\n    }\r\n  }\r\n\r\n  appendPixel(param:string, obj = this.compJsonSchame) {\r\n    if(!obj) return false;\r\n    return (param in obj)  && obj[param] + 'px'\r\n  }\r\n\r\n  // 操作元素\r\n  controlComp(event:MouseEvent) {\r\n    event.stopPropagation();\r\n    let item = {\r\n      e:event,\r\n      type:'element',\r\n      data:this.compJsonSchame\r\n    }\r\n    this.onChildComponentChange.emit(item)\r\n  }\r\n\r\n  // 操作节点\r\n  controlNode(event:MouseEvent, state:string, nodeData?:any) {\r\n    event.stopPropagation();\r\n    let item = {\r\n      e:event,\r\n      type:'node',\r\n      state:state,\r\n      nodeData:nodeData,\r\n      data:this.compJsonSchame\r\n    }\r\n    this.onChildComponentChange.emit(item)\r\n  }\r\n\r\n  // 获取节点数据\r\n  getNodesPostion(nodes:any[], state?:string) {\r\n    let nodeObjs = _.groupBy(nodes, 'nodeDirection')\r\n    this.getNodesPostionByDirection(nodes, nodeObjs['left'], 'left');\r\n    this.getNodesPostionByDirection(nodes,  nodeObjs['right'], 'right');\r\n  }\r\n\r\n  getNodesPostionByDirection(nodes:any[], list:any[], direction:string = 'right' || 'left') {\r\n    let len = list.length;\r\n    let perY = 20;\r\n    let startY = len % 2 === 0 ?  - perY * (len / 2) + 20:  - perY * (len / 2) + 20;\r\n    for(let i=0;i<len;i++) {\r\n      let node = list[i];\r\n      node['y']  = startY + i * perY ;\r\n      let nodeData = _.find(nodes, {\r\n        uniqueId: node.uniqueId\r\n      });\r\n      if(nodeData) {\r\n        nodeData['y'] = node['y'];\r\n      }\r\n    }\r\n    this.compJsonSchame['nodeDTOs'][direction] = list;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<p>basic works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BasicComponent } from '../../basic/basic/basic.component';\r\n\r\n@Component({\r\n  selector: 'app-element',\r\n  templateUrl: './element.component.html',\r\n  styleUrls: ['./element.component.scss']\r\n})\r\nexport class ElementComponent extends BasicComponent implements OnInit {\r\n  width:number = 100;\r\n  height:number = 30;\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCompActiveState();\r\n  }\r\n\r\n  drawLine() {\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"libs-node\" \r\n    *ngIf=\"compJsonSchame\"\r\n    draggable=\"true\" \r\n    (click)=\"controlComp($event)\" \r\n    (dragstart)=\"controlComp($event)\"\r\n    (dragend)=\"controlComp($event)\" [ngClass]=\"{\r\n        active:compJsonSchame && compJsonSchame.active\r\n    }\" [ngStyle]=\"{\r\n        top:appendPixel('positionTop'),\r\n        left:appendPixel('positionLeft')\r\n    }\">\r\n    <span class=\"name\">{{compJsonSchame && compJsonSchame.expression.name || \"元素\"}}</span>\r\n\r\n    <div class=\"bef-nodes\"> \r\n        <span *ngFor=\"let node of compJsonSchame['nodeDTOs']['left'];index as i;\"\r\n            class=\"bef-node node\" \r\n            [ngClass]=\"{\r\n                nextNodeActive:node.nextNodeactive,\r\n                befNodeActive:node.befNodeActive\r\n            }\"\r\n            draggable=\"true\" \r\n            [ngStyle]=\"{\r\n                top:appendPixel('y', node)\r\n            }\"\r\n            (dragstart)=\"controlNode($event, 'input', node)\"\r\n            (drag)=\"controlNode($event, 'input', node)\"\r\n            (dragend)=\"controlNode($event, 'input', node)\"></span>\r\n    </div>\r\n    <div class=\"next-nodes\" > \r\n        <span *ngFor=\"let node of compJsonSchame['nodeDTOs']['right'];index as i;\"\r\n            class=\"next-node node\" \r\n            [ngClass]=\"{\r\n                nextNodeActive:node.nextNodeactive,\r\n                befNodeActive:node.befNodeActive\r\n            }\"\r\n            draggable=\"true\" \r\n            [ngStyle]=\"{\r\n                top:appendPixel('y', node)\r\n            }\"\r\n            (dragstart)=\"controlNode($event, 'output', node)\"\r\n            (drag)=\"controlNode($event, 'output', node)\"\r\n            (dragend)=\"controlNode($event, 'output', node)\">\r\n        </span>\r\n    </div>\r\n</div>","import { Injectable, Component } from '@angular/core';\r\nimport { maxBy , cloneDeep} from 'loadsh';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompUniqueIdStateService {\r\n    ELEMENT_UNIQUE_ID:number =  10000;\r\n    NODE_UNIQUE_ID:number = 40000;\r\n    LINE_UNIQUE_ID:number = 60000;\r\n\r\n    constructor() { }\r\n\r\n    elementUniqueIdState(comps:any[] = []) {\r\n        // let len = comps.length;\r\n        // if(!len) return this.ELEMENT_UNIQUE_ID;\r\n        // let currentMaxId = maxBy(cloneDeep(comps), 'uniqueId');\r\n        // let nextId = ++currentMaxId['uniqueId'];\r\n        // return nextId || this.ELEMENT_UNIQUE_ID;\r\n        return uuidv4();\r\n    }\r\n\r\n    nodeUniqueIdState(comps:any[] = [], index) {\r\n        // let len = comps.length;\r\n        // let nodes = [];\r\n        // for(let i=0;i<len;i++) {\r\n        //     let element = comps[i];\r\n        //     for(let j=0;j<element.nodeDTOs.length;j++) {\r\n        //         let item = element.nodeDTOs[j];\r\n        //         nodes.push(item);\r\n        //     }\r\n        // }\r\n        // let currentMaxId = maxBy(cloneDeep(nodes), 'uniqueId');\r\n        // let nextId = ++currentMaxId['uniqueId'] + index;\r\n        // return nextId || this.NODE_UNIQUE_ID;\r\n        return uuidv4();\r\n    }\r\n}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ContentRefHostDirective } from './directives/content-ref-host.directive';\r\nimport { EditorCoreModule } from './core/editor-core.module';\r\nimport { EditorContentComponent } from './components/editor-content/editor-content.component';\r\nimport { NodeSignalComponent } from './components/node-signal/node-signal.component';\r\nimport { JsonSchemaService } from './providers/json-schema.service';\r\nimport { JsonSchemaComponent } from './components/json-schema/json-schema.component';\r\nconst routes: Routes = [\r\n  { \r\n    path: '', \r\n    component: EditorContentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EditorContentComponent,\r\n    ContentRefHostDirective,\r\n    NodeSignalComponent,\r\n    JsonSchemaComponent\r\n  ],\r\n  exports:[\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EditorCoreModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    JsonSchemaService\r\n  ],\r\n  schemas:[\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class EditorModule { }\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appContentRefHost]'\r\n})\r\nexport class ContentRefHostDirective {\r\n\r\n  constructor(\r\n    public viewContainerRef: ViewContainerRef\r\n  ) { }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-basic-style',\r\n  templateUrl: './basic-style.component.html',\r\n  styleUrls: ['./basic-style.component.scss']\r\n})\r\nexport class BasicStyleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>basic-style works!</p>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-json-schema',\r\n  templateUrl: './json-schema.component.html',\r\n  styleUrls: ['./json-schema.component.scss']\r\n})\r\nexport class JsonSchemaComponent implements OnInit {\r\n  jsonSchema:any;\r\n  jsonSchemaString:string;\r\n  constructor(\r\n    private activeModal :NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.jsonSchemaString = JSON.stringify(this.jsonSchema)\r\n  }\r\n\r\n  close() {\r\n    this.activeModal.dismiss()\r\n  }\r\n\r\n}\r\n","<div class=\"json-schema\">\r\n    <div class=\"title\">\r\n        <span class=\"tit\">\r\n            JSONSCHEMA\r\n        </span>\r\n        <img class=\"icon\" (click)=\"close()\" src=\"assets/imgs/close.svg\" alt=\"\">\r\n    </div>\r\n\r\n    <div id=\"content\">\r\n<!-- <pre id=\"json\" > [\r\n    <span *ngFor=\"let ele of jsonSchema;\"><span class=\"json-ele\">\r\n    <span class=\"key\">uniqueId</span><span class=\"spe\">:</span><span class=\"val\">{{ele.uniqueId}}</span>\r\n    <span class=\"key\">positionLeft</span><span class=\"spe\">:</span><span class=\"val\">{{ele.positionLeft}}</span>\r\n    <span class=\"key\">positionTop</span><span class=\"spe\">:</span><span class=\"val\">{{ele.positionTop}}</span>\r\n    <span class=\"key\">nodeDTOs</span><span class=\"spe\">:</span><span class=\"val\"><span *ngFor=\"let node of ele.nodeDTOs;\">[\r\n        <span class=\"key\">uniqueId</span><span class=\"spe\">:</span><span class=\"val\">{{node.uniqueId}}</span>\r\n        <span class=\"key\">nodeType</span><span class=\"spe\">:</span><span class=\"val\">{{node.nodeType}}</span>\r\n        <span class=\"key\">nodeTag</span><span class=\"spe\">:</span><span class=\"val\">{{node.nodeTag}}</span>\r\n        <span class=\"key\">segmentDTOs</span><span class=\"spe\">:</span><span class=\"val\">[\r\n            <span *ngFor=\"let segment of node.segmentDTOs\"><span class=\"key\" >inputNodeUniqueId</span><span class=\"spe\">:</span><span class=\"val\">{{segment.inputNodeUniqueId}}</span>\r\n            <span class=\"key\">outputNodeUniqueId</span><span class=\"spe\">:</span><span class=\"val\">{{segment.outputNodeUniqueId}}</span></span>\r\n        ],</span>\r\n    ],</span></span></span></span>\r\n ],</pre> -->\r\n    <div class=\"values\" *ngIf=\"jsonSchema.length\">{{jsonSchemaString}}</div>\r\n    <div class=\"values\" *ngIf=\"!jsonSchema.length\">\r\n        <img class=\"node-data\" src=\"assets/imgs/nodata.svg\" alt=\"\">\r\n    </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { element } from 'protractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JsonSchemaService {\r\n\r\n  constructor() { }\r\n\r\n  getJsonByElements(eles:any[]) {\r\n    let len = eles.length;\r\n    let elements = [];\r\n    for(let i=0;i<len;i++) {\r\n      elements.push(this._getElement(eles[i]))\r\n    }\r\n    return elements;\r\n  }\r\n\r\n  _getElement(element:any) {\r\n    let {\r\n      uniqueId,\r\n      elementId,\r\n      expression,\r\n      linkElementConfigId,\r\n      linkConfigId,\r\n      nodeDTOs,\r\n      positionLeft,\r\n      positionTop\r\n    } = element;\r\n\r\n    let elementJson = {\r\n      uniqueId,\r\n      elementId,\r\n      expression,\r\n      linkElementConfigId,\r\n      linkConfigId,\r\n      nodeDTOs,\r\n      positionLeft,\r\n      positionTop\r\n    }\r\n    elementJson.nodeDTOs = this._getNodes(nodeDTOs)\r\n    return elementJson;\r\n  }\r\n\r\n  _getNodes(nodes:any[]) {\r\n    if(!Array.isArray(nodes)) return [];\r\n    let len = nodes.length;\r\n    let nodeList = [];\r\n    for(let i=0;i<len;i++) {\r\n      nodeList.push( this._getNode(nodes[i]))\r\n    }\r\n    return nodeList;\r\n  }\r\n\r\n  _getNode(node:any) {\r\n    let {\r\n      uniqueId,\r\n      nodeId,\r\n      linkElementConfigId,\r\n      nodeDirection,\r\n      nodeType,\r\n      nodeIndex,\r\n      nodeTag,\r\n      expression,\r\n      segmentDTOs\r\n    } = node;\r\n\r\n    let nodeJson = {\r\n      uniqueId,\r\n      nodeId,\r\n      linkElementConfigId,\r\n      nodeDirection,\r\n      nodeType,\r\n      nodeIndex,\r\n      nodeTag,\r\n      expression,\r\n      segmentDTOs\r\n    }\r\n    nodeJson['segmentDTOs']  = this._getSegments(nodeJson.segmentDTOs)\r\n    return nodeJson;\r\n  }\r\n\r\n  _getSegments(links) {\r\n    if(!Array.isArray(links)) return [];\r\n    let len = links.length;\r\n    let linkList = [];\r\n    for(let i=0;i<len;i++) {\r\n      linkList.push( this._getSegment(links[i]))\r\n    }\r\n    return linkList;\r\n  }\r\n\r\n  _getSegment(link:any) {\r\n    let {\r\n      segmentId,\r\n      inputLinkElementConfigId,\r\n      inputNodeId,\r\n      inputNodeUniqueId,\r\n      outputLinkElementConfigId,\r\n      outputNodeId,\r\n      outputNodeUniqueId,\r\n    } = link;\r\n\r\n    let segmentJson = {\r\n      segmentId,\r\n      inputLinkElementConfigId,\r\n      inputNodeId,\r\n      inputNodeUniqueId,\r\n      outputLinkElementConfigId,\r\n      outputNodeId,\r\n      outputNodeUniqueId,\r\n    }\r\n    return segmentJson;\r\n  }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompsLibsModule } from './comps-libs/comps-libs.module';\r\nimport { DynamicCreateCompService } from './provider/dynamic-create-comp.service';\r\nimport { DynamicCreateCompInitService } from './provider/dynamic-create-comp-init.service';\r\nimport { BasicStyleComponent } from './comps-libs/basic/basic-style/basic-style.component';\r\nimport { CompUniqueIdStateService } from './provider/uniqueid-state.service';\r\n@NgModule({\r\n  declarations: [\r\n  BasicStyleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompsLibsModule,\r\n    \r\n  ],\r\n  providers:[\r\n    DynamicCreateCompService,\r\n    DynamicCreateCompInitService,\r\n    CompUniqueIdStateService\r\n  ]\r\n})\r\nexport class EditorCoreModule { }\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-node-signal',\r\n  templateUrl: './node-signal.component.html',\r\n  styleUrls: ['./node-signal.component.scss']\r\n})\r\nexport class NodeSignalComponent implements OnInit {\r\n\r\n  datas:any[];\r\n  @Output() createComp = new EventEmitter();\r\n  @Output() displayComp = new EventEmitter();\r\n  \r\n  constructor() { \r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.datas = [{\r\n      id:1,\r\n      name:\"Elements\",\r\n      type:'type',\r\n      child:[{\r\n          id:1,\r\n          name:\"Ele-1\",\r\n          type:'element'\r\n        },{\r\n          id:2,\r\n          name:\"Ele-2\",\r\n          type:'element'\r\n        },{\r\n          id:3,\r\n          name:\"Ele-3\",\r\n          type:'element'\r\n        },{\r\n          id:4,\r\n          name:\"Ele-4\",\r\n          type:'element'\r\n        }\r\n      ]\r\n    }]\r\n  }\r\n\r\n\r\n  dragCreateComp(event:MouseEvent,item:any ) {\r\n    let compData = {\r\n      event:event,\r\n      expression:item\r\n    }\r\n    this.createComp.emit(compData);\r\n  }\r\n\r\n}\r\n","<div class=\"node-signal \">\r\n    <ul class=\"list\">\r\n        <li class=\"item\" *ngFor=\"let item of datas; index as i;\">\r\n            <span class=\"name\">{{item.name}}</span>\r\n            <ul class=\"sub-list\" *ngIf=\"item.child && item.child.length\">\r\n                <li class=\"sub-item\" *ngFor=\"let sub of item.child; index as subi;\">\r\n                    <span class=\"line\"></span>\r\n                    <span class=\"sub-name dragBool\"  \r\n                        draggable=\"true\" \r\n                        (dragend)=\"dragCreateComp($event, sub)\"\r\n                        >{{sub.name}}</span>       \r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, ComponentFactoryResolver, OnInit, ViewChild } from '@angular/core';\r\nimport { DynamicCreateCompInitService } from '../../core/provider/dynamic-create-comp-init.service';\r\nimport { DynamicCreateCompService } from '../../core/provider/dynamic-create-comp.service';\r\nimport { ContentRefHostDirective } from '../../directives/content-ref-host.directive';\r\nimport * as _ from 'loadsh'\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { LineComponent } from '../../core/comps-libs/comps/line/line.component';\r\nimport { cloneDeep } from 'loadsh';\r\nimport { CompUniqueIdStateService } from '../../core/provider/uniqueid-state.service';\r\nimport { JsonSchemaService } from '../../providers/json-schema.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JsonSchemaComponent } from '../json-schema/json-schema.component';\r\n@Component({\r\n  selector: 'app-editor-content',\r\n  templateUrl: './editor-content.component.html',\r\n  styleUrls: ['./editor-content.component.scss']\r\n})\r\nexport class EditorContentComponent implements OnInit, AfterContentInit, AfterContentChecked {\r\n  currentViewContRef: any; // 当前的组件容器\r\n  currentPageNodes: any[]; // 页面元素jsonSchame列表\r\n  currentPageComps: any[]; // 页面元素列表\r\n  currentActiveNode: any;\r\n  activeCompInstance: any;\r\n  activeCompState_index: number;\r\n  activeCompState_comp: any;\r\n  activeCompState_drag_sx: number; // 拖拽开始位置x\r\n  activeCompState_drag_sy: number; // 拖拽开始位置y\r\n  compDefType: string = 'node';\r\n  jsonScheme:any[]; // json对象\r\n\r\n  @ViewChild(ContentRefHostDirective, { static: true }) viewContRef: ContentRefHostDirective;  // 当前的组件\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private dynamicCreateCompService: DynamicCreateCompService,\r\n    private initCompDataService: DynamicCreateCompInitService,\r\n    private uniqueidStateService: CompUniqueIdStateService,\r\n    private eventManager:EventManager,\r\n    private jsonSchemaService: JsonSchemaService,\r\n    private modal: NgbModal\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initData();\r\n  }\r\n\r\n  initData() {\r\n    this.activeCompState_index = 0;\r\n    this.currentPageNodes = [];\r\n    this.jsonScheme = [];\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.currentViewContRef = this.viewContRef.viewContainerRef;\r\n    this.initRendeComps();\r\n    this.initRenderLineComp();\r\n    this.addLister();\r\n  }\r\n\r\n  addLister() {\r\n    this.eventManager.addGlobalEventListener('window', 'keydown', event => {\r\n      if(event.code === 'Delete') {\r\n        _.remove(this.currentPageNodes, node => {\r\n          return node.active === true \r\n        })\r\n        this.activeCompState_index = -1;\r\n        this.reRenderComp();\r\n      }\r\n    })\r\n  }\r\n\r\n  reRenderComp() {\r\n    this.currentViewContRef.clear();\r\n    this.initRendeComps();\r\n    this.initRenderLineComp();\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n\r\n  }\r\n\r\n  getContentBoundingClinetRect() {\r\n    let dom = document.getElementById(\"content\");\r\n    let rect = dom.getBoundingClientRect();\r\n    return rect;\r\n  }\r\n\r\n  creatCompByDrag(createCompData: any) {\r\n    this.initState();\r\n    let expressionData = createCompData.expression;\r\n    let event = createCompData.event;\r\n    this.addComponent(event, expressionData)\r\n  }\r\n\r\n  // 通过拖拽创建新组件\r\n  addComponent(event: MouseEvent, expressionData: any, compType: string = this.compDefType) {\r\n    let _compType = compType;// 获取创建组件的类型\r\n    let addCompJsonData = this.initCompDataService.initDataObject(_compType);\r\n    if (event) {\r\n      this.initPagesCompState();\r\n      let domContentRect = this.getContentBoundingClinetRect();\r\n      addCompJsonData['positionLeft'] = event.clientX - domContentRect.x;\r\n      addCompJsonData['positionTop'] = event.clientY - domContentRect.y;\r\n      addCompJsonData['expression'] = expressionData;\r\n      // update state\r\n      addCompJsonData['active'] = true;\r\n      addCompJsonData['uniqueId'] = this.uniqueidStateService.elementUniqueIdState(this.currentPageNodes);\r\n      let nodeLen = addCompJsonData.nodeDTOs.length;\r\n      for(let i=0;i<nodeLen;i++) {\r\n        let node = addCompJsonData.nodeDTOs[i];\r\n        node.uniqueId = this.uniqueidStateService.nodeUniqueIdState(this.currentPageNodes, i);\r\n      }\r\n    }\r\n    this.currentPageNodes.push(addCompJsonData);\r\n    let currIndex = this.currentPageNodes.length - 1;\r\n    this.activeCompState_index = currIndex;\r\n    this.renderComponent(_compType,  currIndex);\r\n  }\r\n\r\n  initPagesCompState() {\r\n    let len = this.currentPageNodes.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let compJsonSchame = this.currentPageNodes[i];\r\n      compJsonSchame.active = false;\r\n    }\r\n  }\r\n\r\n  initRendeComps() {\r\n    let len = this.currentPageNodes.length;\r\n    for (let i = 0; i < len; i++) {\r\n      this.renderComponent('node', i);\r\n    }\r\n  }\r\n\r\n  initRenderLineComp(){\r\n    let comp = LineComponent\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(comp);\r\n    let compRef = this.currentViewContRef.createComponent(componentFactory);\r\n    let compInstance = compRef.instance;\r\n    (<any>compInstance).elements = this.currentPageNodes;\r\n  }\r\n\r\n  renderComponent(compType: string = 'node', currentIndex:number, componnet?:any) {\r\n    let compIndex = currentIndex ;\r\n    let compJsonSchame = this.currentPageNodes[compIndex];\r\n    let comp = this.dynamicCreateCompService.getComponentByType(compType); // 声明一个组件\r\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(comp); // 实例化一个组价\r\n    let compRef = this.currentViewContRef.createComponent(componentFactory); // 动态创建一个组件\r\n    let compInstance = compRef.instance;\r\n    (<any>compInstance).compJsonSchame = compJsonSchame;\r\n    (compInstance).onChildComponentChange.subscribe(event => {\r\n      if (event && event.data) {\r\n        let type = event.type;\r\n        if(type === 'element') {\r\n          this.elementComponentChange(event);\r\n        }else if(type === 'node') {\r\n          this.nodeComponentChange(event);\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  nodeComponentChange(event:any) {\r\n    let domContentRect = this.getContentBoundingClinetRect();\r\n    let _x = event.e.clientX - domContentRect.x;\r\n    let _y = event.e.clientY - domContentRect.y;\r\n    let _nodeData = event.nodeData;\r\n    if(!_nodeData) return;\r\n    let _direction = _nodeData.nodeDirection;\r\n    let _currenComp = event.data;\r\n\r\n    let elements = this.currentPageNodes;\r\n    let len = elements.length;\r\n    let eType = event.e.type;\r\n    if(eType ==='dragstart') {\r\n      _nodeData.befNodeActive = true;\r\n    }else if(eType === 'dragend') {\r\n      _nodeData.befNodeActive = false\r\n    }\r\n    for(let i=0;i<len;i++) {\r\n      let element = elements[i];\r\n      if(element['uniqueId'] === _currenComp['uniqueId']) {\r\n        continue;\r\n      }\r\n      let _left = element['positionLeft'];\r\n      let _top = element['positionTop'];\r\n      let _pending = 10;\r\n      let _nodes = _.groupBy(element.nodeDTOs, 'nodeDirection')[_direction === 'right' ? \"left\" :'right'];\r\n      let _len = _nodes.length;\r\n      let _offsetY = 5;\r\n      let _offsetX = 10;\r\n      for(let i=0;i<_len;i++) {\r\n        let _node = _nodes[i];\r\n        _top  += _node.y;\r\n        if(event.state === 'output') {\r\n          if(_x >= _left - _offsetX - _pending && _x <= _left - _offsetX + _pending && _y >= _top + _offsetY - _pending && _y <= _top + _offsetY+ _pending) {\r\n            if(eType === 'dragend'){\r\n              _node.nextNodeactive = false;\r\n              if(_node) {\r\n                _node.y = _nodeData.y;\r\n              }\r\n              this.appendLine(_node, _nodeData,  _nodeData.segmentDTOs);\r\n              return;\r\n            }else {\r\n              _node.nextNodeactive = true;\r\n            }\r\n          }else {\r\n            if(_node.nextNodeactive) {\r\n              _node.nextNodeactive = false;\r\n              break;\r\n            }\r\n          }\r\n        } else if(event.state === 'input') {\r\n          let _width = 70;\r\n          _pending  = 15;\r\n          if(_x >= _left - _offsetX + _width -  _pending \r\n              && _x <= _left - _offsetX + _width +  _pending \r\n              && _y >= _top + _offsetY - _pending \r\n              && _y <= _top + _offsetY+ _pending) {\r\n            if(eType === 'dragend'){\r\n              _node.nextNodeactive = false;\r\n              if(_node) {\r\n                _node.y = _nodeData.y;\r\n              }\r\n              this.appendLine(_nodeData, _node,  _node.segmentDTOs);\r\n              return;\r\n            }else {\r\n              _node.nextNodeactive = true;\r\n            }\r\n          }else {\r\n            if(_node.nextNodeactive) {\r\n              _node.nextNodeactive = false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n   \r\n    }\r\n  }\r\n\r\n  appendLine( nextNode, befNode, segmentDTOs:any[]) {\r\n    if(befNode && nextNode) {\r\n      let hasBefBool = _.find(segmentDTOs, {\r\n        inputNodeUniqueId: befNode.uniqueId\r\n      })\r\n      let hasNextBool = _.find(segmentDTOs, {\r\n        outputNodeUniqueId: nextNode.uniqueId\r\n      })\r\n      if(hasBefBool && hasNextBool) {\r\n        console.info(\"触点连线已经存在，无需创建新的连接！\");\r\n      } else {\r\n        let line = {\r\n          \"segmentId\": null,\r\n          \"inputLinkElementConfigId\": null,\r\n          \"inputNodeId\": null,\r\n          \"inputNodeUniqueId\": befNode.uniqueId,\r\n          \"outputLinkElementConfigId\": null,\r\n          \"outputNodeId\": null,\r\n          \"outputNodeUniqueId\": nextNode.uniqueId\r\n        }\r\n        segmentDTOs.push(line)\r\n      }\r\n  \r\n    }\r\n  }\r\n\r\n  elementComponentChange(event:any) {\r\n    let compJson = event.data;\r\n    this.initPagesCompState();\r\n    let _eType = event!.e!.type;\r\n    if (_eType === 'click') {\r\n      this.activeCompState_drag_sx = event.e.clientX;\r\n      this.activeCompState_drag_sy = event.e.clientY;\r\n    } else if (_eType === 'dragstart') {\r\n      this.activeCompState_drag_sx = event.e.clientX;\r\n      this.activeCompState_drag_sy = event.e.clientY;\r\n    } else if (_eType === 'dragend') {\r\n      let _cx = event.e.clientX;\r\n      let _cy = event.e.clientY;\r\n      let _x = _cx - this.activeCompState_drag_sx;\r\n      let _y = _cy - this.activeCompState_drag_sy;\r\n      compJson['positionLeft'] += _x;\r\n      compJson['positionTop'] += _y;\r\n    }\r\n    event.data.active = true;\r\n  }\r\n\r\n  initState() {\r\n    this.activeCompState_index = -1;\r\n  }\r\n\r\n  drawNodeDTOs(compJsonSchame:any) {\r\n    let nodeDTOs = compJsonSchame.nodeDTOs || [];\r\n    let len = nodeDTOs.length;\r\n    for(let i=0;i<len;i++) {\r\n      let nodeDTO = nodeDTOs[i];\r\n      this.drawSegmentDTOs(nodeDTO)\r\n    }\r\n  }\r\n\r\n  drawSegmentDTOs(nodeDTO:any) {\r\n    let segmentDTOs = nodeDTO!.segmentDTOs || [];\r\n    let len = segmentDTOs.length;\r\n    for(let i=0;i<len;i++) {\r\n      let segmentDTO = segmentDTOs[i];\r\n      this.drawSegmentDTO(segmentDTOs)\r\n    }\r\n  }\r\n\r\n  drawSegmentDTO(segment) {\r\n\r\n  }\r\n\r\n  showJSON() {\r\n    let pageElements = _.cloneDeep(this.currentPageNodes);\r\n    this.jsonScheme = this.jsonSchemaService.getJsonByElements(pageElements);\r\n    this.openSchemaComp();\r\n  }\r\n\r\n  openSchemaComp() {\r\n    let activeModal = this.modal.open(JsonSchemaComponent,{\r\n      size: 'xl'\r\n    });\r\n    activeModal.componentInstance.jsonSchema = this.jsonScheme;\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div id=\"jsonComp\" >\r\n        <img class=\"icon\" (click)=\"showJSON()\" src=\"assets/imgs/json.svg\" alt=\"json\" title=\"jsonschema\">\r\n    </div>\r\n    <div id=\"editor-content\">\r\n        <app-node-signal \r\n            (createComp)=\"creatCompByDrag($event)\" \r\n            class=\"item\"></app-node-signal>\r\n        <div id=\"content\" class=\"item content\">\r\n            <ng-template appContentRefHost #contentComp ></ng-template>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-no-match',\r\n  templateUrl: './no-match.component.html',\r\n  styleUrls: ['./no-match.component.scss']\r\n})\r\nexport class NoMatchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>no-match works!</p>\r\n","import { AfterContentChecked } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as _ from 'loadsh';\r\n\r\n@Component({\r\n  selector: 'app-line',\r\n  templateUrl: './line.component.html',\r\n  styleUrls: ['./line.component.scss']\r\n})\r\nexport class LineComponent implements OnInit , AfterContentChecked {\r\n  elements:any[];\r\n  nodeDTOs:any[];\r\n  segmentDTOs:any[];\r\n  H:30;\r\n  W:100;\r\n  LAB:10;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.initData();\r\n    this.getData();\r\n    this.appendLinesInfo();\r\n  }\r\n\r\n\r\n  ngAfterContentChecked() {\r\n    this.initData();\r\n    this.getData();\r\n    this.appendLinesInfo();\r\n  }\r\n\r\n  initData() {\r\n    this.nodeDTOs = [];\r\n    this.segmentDTOs = [];\r\n  }\r\n\r\n  getData() {\r\n    let len = this.elements.length;\r\n    for(let i=0;i<len;i++) {\r\n      let element = this.elements[i];\r\n      this.getNodeDTOs(element);\r\n    }\r\n  }\r\n\r\n  getNodeDTOs(ele:any) {\r\n    let nodeDTOs = ele['nodeDTOs'] || [];\r\n    let len = nodeDTOs.length;\r\n    for(let i=0;i<len;i++) {\r\n      let nodeDTO = nodeDTOs[i];\r\n      nodeDTO['positionLeft'] = ele['positionLeft'];\r\n      nodeDTO['positionTop'] = ele['positionTop'];\r\n      this.nodeDTOs.push(nodeDTO);\r\n      this.getSegmentDTOs(nodeDTO);\r\n    }\r\n  }\r\n\r\n  getSegmentDTOs(nodeDTO:any) {\r\n    let segmentDTOs = nodeDTO['segmentDTOs'] || [];\r\n    let len = segmentDTOs.length;\r\n    for(let i=0;i<len;i++) {\r\n      let segmentDTO = segmentDTOs[i];\r\n      this.segmentDTOs.push(segmentDTO);\r\n    }\r\n  }\r\n\r\n  appendLinesInfo() {\r\n    let nodes = this.nodeDTOs;\r\n    let lines_len = this.segmentDTOs.length;\r\n    let segDTOs = this.segmentDTOs\r\n    for(let i=0;i<lines_len;i++) {\r\n      let line = segDTOs[i];\r\n      let sNode = _.find(nodes, {\r\n        uniqueId: line.inputNodeUniqueId\r\n      });\r\n      let eNode = _.find(nodes, {\r\n        uniqueId: line.outputNodeUniqueId\r\n      })\r\n      if(!!sNode && !!eNode) {\r\n        line['x1'] = sNode['positionLeft'] + 76;\r\n        line['y1'] = sNode['positionTop'] +  sNode.y + 6;\r\n        line['x2'] = eNode['positionLeft'] - 12;\r\n        line['y2'] = eNode['positionTop']  + eNode.y + 7;\r\n        let _minddle_x = (line.x1 + line.x2 ) /2;\r\n        line['d']=`M ${line.x1},${line.y1} C ${_minddle_x},${line.y1} ${_minddle_x},${line.y2} ${ line.x2},${line.y2}`\r\n      }else {\r\n        line['DelBool']  = true;\r\n      }\r\n    }\r\n\r\n    _.remove(this.segmentDTOs, line => {\r\n      return line.DelBool === true \r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<svg width=\"1000px\" height=\"700px\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path  *ngFor=\"let line of segmentDTOs\" \r\n        class=\"line\" \r\n        [attr.d]=\"line.d\" \r\n        style=\"stroke:#4988fe; stroke-width:1px;fill:none; \"/>\r\n</svg>","import { Injectable, Component } from '@angular/core';\r\nimport { NoMatchComponent } from '../comps-libs/no-match/no-match.component';\r\nimport { ElementComponent } from '../comps-libs/comps/elements/element.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicCreateCompService {\r\n\r\n  constructor() { }\r\n\r\n  getComponentByType(type:string) {\r\n    let comp;\r\n    switch(type) {\r\n      case 'node':\r\n        comp = ElementComponent;\r\n        break;\r\n      default:\r\n        comp = NoMatchComponent;\r\n    }\r\n    return comp;\r\n  }\r\n\r\n  getDefultComponent() {\r\n    return NoMatchComponent\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}